#RabbitMQ配置
spring.rabbitmq.hsot=localhost
spring.rabbitmg.post=5672
spring.rabbitmq.username=guest
spring.rabbitmg.password=guest
spring.rabbitmg.publisher-confirms=true
#是否启用发布确认
spring.rabbitmg.publisher-returns=true
#是否启用发布返回
spring.rabbitmq.virtual-host=/
连接Broker的虚拟主机名
#指定client连接的Server地址，多个地址间以逗号分隔（优先取addresses,
spring.rabbitmg.addresses=localhost
然后再取ho3t)
#指定心跳超时时间，单位为S,0为不指定，默认为60s
spring.rabbitmg.requested-heartbeat=60
#指定连接超时时间，单位为ms,0表示无穷大，不超时
spring.rabbitmg.connection-timeout=0
spring.rabbitmg.ssl.enabled=false
#是否支持SSL
spring.rabbitmq.listener.simple.concurrency=10
#最小的消费者数量
spring.rabbitmg.listener.simple.max-concurrency=20
#最大的消费者数量
#指定一个请求能处理多少个消息，如果有事务的话，必须大于等于BatchSize的数量
spring.rabbitmg.listener.simple.prefetch=5
#指定一个事务处理消息的数量，最好是小于等于prefetch的数量
spring.rabbitmg.listener,simple.batch-size=3

##======================kafka========================
spring.kafka.bootstrap-servers=172.101.203.33:9092
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=1
spring.kafka.consumer.auto-commit-interval=1S
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.concurrency=5
spring.kafka.listener.ack-mode=manual_immediate
spring.kafka.listener.missing-topics-fatal=false
